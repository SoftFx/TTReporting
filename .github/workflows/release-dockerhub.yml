name: release-dockerhub

on:
  workflow_dispatch:
    inputs:
      variant:
        description: "Which image to build (use 'all' to build every variant)"
        type: choice
        required: true
        options:
          - all
          - big-trades
  release:
    types: [published]

permissions:
  contents: read

env:
  # Final image name on Docker Hub; change via repo Variable IMAGE_NAME if needed
  IMAGE: ${{ vars.IMAGE_NAME || format('{0}/tt-reporting', secrets.DOCKERHUB_USERNAME) }}

jobs:
  build-push:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: big-trades
            dockerfile: build/big-trades   # <-- must be an actual FILE
            context: .
            suffix: big-trades

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute CalVer (daily seq; omit .N when N=1)
        id: ver
        env:
            GH_TOKEN: ${{ github.token }}           # built-in GitHub token
            WORKFLOW_FILE: release-dockerhub.yml    # workflow filename
        shell: bash
        run: |
          set -euo pipefail
          date_tag=$(date -u +'%Y.%m.%d')
          today=$(date -u +'%Y-%m-%d')
          repo="${GITHUB_REPOSITORY}"

        # Fetch the last 100 runs of this workflow
          resp="$(curl -sSL \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${repo}/actions/workflows/${WORKFLOW_FILE}/runs?per_page=100")"

          # Count how many runs were created today (UTC)
          count_today=$(jq -r --arg d "$today" '[.workflow_runs[] | select(.created_at | startswith($d))] | length' <<<"$resp")

          # The current run will be the next one
          seq=$((count_today + 1))

          # If this is the first build of the day, omit the .N suffix
          if [[ "$seq" -le 1 ]]; then
            echo "calver=${date_tag}" >> "$GITHUB_OUTPUT"
          else
            echo "calver=${date_tag}.${seq}" >> "$GITHUB_OUTPUT"
         fi

      - name: Compute short SHA
        id: shortsha
        shell: bash
        run: |
          echo "short=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"         

      - name: Build & Push
        id: build
        if: ${{ github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && (inputs.variant == 'all' || matrix.name == inputs.variant)) }}
        uses: docker/build-push-action@v6
        with:
          context:   ${{ matrix.context }}
          file:      ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ steps.ver.outputs.calver }}-${{ matrix.suffix }}
            ${{ env.IMAGE }}:latest-${{ matrix.suffix }}
            ${{ env.IMAGE }}:sha-${{ steps.shortsha.outputs.short }}-${{ matrix.suffix }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max

      - name: Tag manifest by sha256 digest
        if: ${{ steps.build.outputs.digest != '' }}
        shell: bash
        run: |
          IMAGE="${{ env.IMAGE }}"
          DIGEST='${{ steps.build.outputs.digest }}'     # example: sha256:abcde123...
          D="${DIGEST#sha256:}"                          # remove prefix
          SHORT="${D:0:12}"                              # just shorter
          # link this tag too
          docker buildx imagetools create \
            -t "${IMAGE}:sha256-${SHORT}-${{ matrix.suffix }}" \
            "${IMAGE}@${DIGEST}"

      - name: Prepare short digest
        if: ${{ steps.build.outputs.digest != '' }}
        id: dig
        shell: bash
        run: |
           d="${{ steps.build.outputs.digest }}"      # as sha256:XXXXXXXXXXXXXXXX...
           d="${d#sha256:}"                           # remove prefix 'sha256:'
           echo "short=${d:0:12}" >> "$GITHUB_OUTPUT" # first 12 symbols

      - name: Echo published image
        if: ${{ github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && (inputs.variant == 'all' || matrix.name == inputs.variant)) }}
        shell: bash
        run: |
          echo "Pushed:"
          echo "  ${{ env.IMAGE }}:${{ steps.ver.outputs.calver }}-${{ matrix.suffix }}"
          echo "  ${{ env.IMAGE }}:latest-${{ matrix.suffix }}"
          echo "  ${{ env.IMAGE }}:sha-${{ steps.shortsha.outputs.short }}-${{ matrix.suffix }}"
          echo "  ${{ env.IMAGE }}:sha256-${{ steps.dig.outputs.short }}-${{ matrix.suffix }}"
